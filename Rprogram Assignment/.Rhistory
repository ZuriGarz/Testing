library()
library(cryon)
library(Cryon)
library(Crayon)
library(crayon)
plot(DataDemo$Internet.users,DataDemo$Birth.rate, col=Genre)
DataDemo<- read.csv(file="C:/School and stuffs/PFDA Assignment/Demographic_Data.csv")
plot(DataDemo$Internet.users,DataDemo$Birth.rate, col=Genre)
plot(DataDemo$Internet.users,DataDemo$Birth.rate, pch=2 )
library(dplyr)
DataHouseRent<- read.csv(file="C:/School and stuffs/PFDA Assignment/House_Rent_Dataset.csv")
DataHouseRent
Furnished = filter(DataHouseRent, Furnishing.Status=='Furnished')
make a data set of price over Size group by the Furnishing status
#call the library tools
library(dplyr)
library(readr)
#make a data set of price over Size group by the Furnishing status
#below 10000 Economical
FurnishedEco = filter(DataHouseRent, Furnishing.Status=='Furnished', Rent<=10000)
UnFurnishedEco = filter(DataHouseRent, Furnishing.Status=='Unfurnished', Rent<=10000)
SemiFurnishedEco = filter(DataHouseRent, Furnishing.Status=='Semi-Furnished',Rent<=10000)
#Below 50000 Middle
FurnishedMid = filter(DataHouseRent, Furnishing.Status=='Furnished', Rent<=50000, Rent>10000)
UnFurnishedMid = filter(DataHouseRent, Furnishing.Status=='Unfurnished', Rent<=50000, Rent>10000)
SemiFurnishedMid = filter(DataHouseRent, Furnishing.Status=='Semi-Furnished',Rent<=50000, Rent>10000)
#Below 100000 UpperLevelPrice
FurnishedUp = filter(DataHouseRent, Furnishing.Status=='Furnished', Rent<=1000000, Rent>50000)
UnFurnishedUp = filter(DataHouseRent, Furnishing.Status=='Unfurnished', Rent<=1000000, Rent>50000)
SemiFurnishedUp = filter(DataHouseRent, Furnishing.Status=='Semi-Furnished',Rent<=1000000, Rent>50000)
#Upper 100000 SuperExpensive
FurnishedEX = filter(DataHouseRent, Furnishing.Status=='Furnished', Rent>100000)#Which currently unavailable
UnFurnishedEX = filter(DataHouseRent, Furnishing.Status=='Unfurnished', Rent>100000)#which currently unavailable
SemiFurnishedEX = filter(DataHouseRent, Furnishing.Status=='Semi-Furnished',Rent>100000)
#make a data set of price over Size group by city + plot the graph of price over size group
#plotting Graph
plot(DataHouseRent$Size,DataHouseRent$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size")
#assign to variable
#Removing the outlierfor price
dataa <- DataHouseRent$Rent
#removing outlier in price as it affect the overall deduction in box plot
quartiles <- quantile(dataa, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(dataa)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data_no_outlier <- subset(dataa, dataa > Lower & dataa < Upper)
length(data_no_outlier)
Name = c("Rentprice")
boxplot(data_no_outlier)
#finding min price without outlier which are over priced
print(Upper)
#from here we can filter the data of non outlier
FurnishedOutFree = filter(DataHouseRent, Furnishing.Status=='Furnished', Rent>=67500)
UnFurnishedOutFree = filter(DataHouseRent, Furnishing.Status=='Unfurnished', Rent>=67500)
SemiFurnishedOutFree = filter(DataHouseRent, Furnishing.Status=='Semi-Furnished',Rent>=67500)
#data set price over size group by the owner rent preferences with and without Outlier
FurnishedEX = filter(DataHouseRent, Furnishing.Status=='Furnished', Rent>=67500)#Which currently unavailable
UnFurnishedEX = filter(DataHouseRent, Furnishing.Status=='Unfurnished', Rent>=67500)#which currently unavailable
SemiFurnishedEX = filter(DataHouseRent, Furnishing.Status=='Semi-Furnished',Rent>=67500)
FurnishedEco
View(FurnishedEco)
plot(DataHouseRent$Size,DataHouseRent$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size")
#Removing the outlierfor price
dataa <- DataHouseRent$Rent
#removing outlier in price as it affect the overall deduction in box plot
quartiles <- quantile(dataa, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(dataa)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
data_no_outlier <- subset(dataa, dataa > Lower & dataa < Upper)
length(data_no_outlier)
Name = c("Rentprice")
boxplot(data_no_outlier)
data_no_outlier
View(DataHouseRent)
plot(FurnishedEX$Size,FurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Furnished")
View(FurnishedEX)
ptions(scipen=10000)
library(plot(FurnishedEX$Size,FurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Furnished"))
plot(FurnishedEX$Size,FurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Furnished")
plot(UnFurnishedEX$Size,FurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Unfurnished")
plot(UnFurnishedEX$Size,UnFurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Unfurnished")
x1<-plot(FurnishedEX$Size,FurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Furnished")
x1 + scale_x_continuous(labels = 10000)
library(scales)
point <- format_format(big.mark = " ", decimal.mark = ",", scientific = FALSE)
x1<-plot(FurnishedEX$Size,FurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Furnished")
x1 + scale_x_continuous(labels = point)
plot(FurnishedEX$Size,FurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Furnished")
plot(UnFurnishedEX$Size,UnFurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Unfurnished")
plot(UnFurnishedEX$Size,UnFurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Unfurnished")
plot(SemiFurnishedEX$Size,SemiFurnishedEX$Rent, xlab = "Size", ylab="RentPrice", main = "Price over Size Semi Furnished")
